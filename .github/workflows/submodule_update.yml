name: Update Submodule Reference
on:
  repository_dispatch:
    types: [submodule-updated]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-submodule:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo & sub-modules
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_PAT }}
          fetch-depth: 0
          submodules: recursive

      - name: Git identity
        run: |
          git config --global user.name  'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'

      - name: Switch to dev
        run: git checkout dev

      - name: Find sub-module path
        id: path
        run: |
          REPO_NAME=$(basename "${{ github.event.client_payload.submodule_name }}")
          SUB_PATH=$(git config -f .gitmodules --get-regexp path | grep "$REPO_NAME" | awk '{print $2}')
          echo "path=$SUB_PATH" >>"$GITHUB_OUTPUT"

      - name: Create branch name
        id: branch
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          BRANCH_NAME="update-${{ steps.path.outputs.path }}-${TIMESTAMP}"
          echo "name=$BRANCH_NAME" >>"$GITHUB_OUTPUT"

      - name: Create feature branch
        run: |
          git checkout -b "${{ steps.branch.outputs.name }}"

      - name: Update submodule pointer
        id: update
        run: |
          cd "${{ steps.path.outputs.path }}"
          git fetch origin
          git checkout ${{ github.event.client_payload.commit_sha }}
          cd -
          git add "${{ steps.path.outputs.path }}"
          if ! git diff --cached --quiet; then
            git commit -m "Update ${{ steps.path.outputs.path }} â†’ ${{ github.event.client_payload.commit_sha }}"
            echo "updated=true" >>"$GITHUB_OUTPUT"
          else
            echo "updated=false" >>"$GITHUB_OUTPUT"
          fi

      - name: Push feature branch
        if: steps.update.outputs.updated == 'true'
        run: |
          git push \
            "https://x-access-token:${{ secrets.BOT_PAT }}@github.com/${{ github.repository }}.git" \
            "${{ steps.branch.outputs.name }}"

      - name: Create Pull Request
        if: steps.update.outputs.updated == 'true'
        id: pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.BOT_PAT }}
          branch: ${{ steps.branch.outputs.name }}
          base: dev
          title: "Update ${{ steps.path.outputs.path }} submodule"
          body: |
            Automated update of ${{ steps.path.outputs.path }} submodule to commit ${{ github.event.client_payload.commit_sha }}.
            
            This PR was automatically created and will be auto-approved.
          delete-branch: true

      - name: Auto-approve Pull Request
        if: steps.update.outputs.updated == 'true' && steps.pr.outputs.pull-request-number
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.BOT_PAT }}
          pull-request-number: ${{ steps.pr.outputs.pull-request-number }}
          merge-method: squash

      - name: Approve Pull Request
        if: steps.update.outputs.updated == 'true' && steps.pr.outputs.pull-request-number
        run: |
          gh pr review ${{ steps.pr.outputs.pull-request-number }} --approve --body "Auto-approved by GitHub Actions"
        env:
          GH_TOKEN: ${{ secrets.BOT_PAT }}

